/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is
 * Netscape Communications Corporation.
 * Portions created by the Initial Developer are Copyright (C) 1998
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either of the GNU General Public License Version 2 or later (the "GPL"),
 * or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsISupports.idl"
#include "nsIMsgFolder.idl"

%{C++
#include "nsTArray.h"
%}

interface nsIMsgWindow;
interface nsINntpIncomingServer;

[ref] native nsMsgKeyArrayRef(nsTArray<nsMsgKey>);

[scriptable, uuid(e56a2366-e66c-4240-a9a1-48c4a0a9ffbc)]
interface nsIMsgNewsFolder : nsISupports {
  attribute ACString groupUsername;
  attribute ACString groupPassword;

  readonly attribute AString unicodeName;
  /**|rawName| is an 8-bit string to represent the name of a newsgroup used by 
   * a news server. It's offered for the convenience of callers so that they 
   * don't have to convert |unicodeName| to the server-side name when 
   * communicating with a news server.  It's US-ASCII except for some 
   * 'stand-alone' Chinese news servers that use GB2312 for newsgroup names 
   * violating RFC 1036. For those servers, it's GB2312. However, it can be any
   * other single and multibyte encoding in principle. The encoding of this 
   * string is stored in |nsINntpIncomingServer| because that's a server-wide
   * property.
   **/
  [noscript] readonly attribute ACString rawName;
  readonly attribute nsINntpIncomingServer nntpServer;
  attribute boolean saveArticleOffline;
   
  ACString getGroupPasswordWithUI(in AString aPromptString, in AString aPromptTitle, in nsIMsgWindow aMsgWindow);
  ACString getGroupUsernameWithUI(in AString aPromptString, in AString aPromptTitle, in nsIMsgWindow aMsgWindow);

  void forgetGroupUsername();
  void forgetGroupPassword();
  
  void moveFolder(in nsIMsgFolder aNewsgroupToMove, in nsIMsgFolder aRefNewsgroup, in PRInt32 aOrientation);

  nsIMsgFolder addNewsgroup(in AUTF8String newsgroupName, in ACString setStr);

  void setReadSetFromStr(in ACString setStr);

  readonly attribute ACString newsrcLine;
  readonly attribute ACString optionLines;
  readonly attribute ACString unsubscribedNewsgroupLines;
  void SetNewsrcHasChanged(in boolean newsrcHasChanged);
  void updateSummaryFromNNTPInfo(in long oldest, in long youngest, in long total);
  void removeMessage(in nsMsgKey key); 
  [noscript] void removeMessages(in nsMsgKeyArrayRef aMsgKeys);
  void cancelComplete();
  void cancelFailed();

  ACString getMessageIdForKey(in nsMsgKey key);

  void getNextNMessages(in nsIMsgWindow aMsgWindow);
  void notifyDownloadedLine(in string line, in nsMsgKey key);
  void notifyFinishedDownloadinghdrs();

  /**
   * Retrieves the database, but does not cache it in mDatabase.
   *
   * This is useful for operations that shouldn't hold open the database.
   */
  nsIMsgDatabase getDatabaseWithoutCache();
};
